{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","setFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d523ee5a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n\t//here i can write js code and function declarations\r\n\tconst inputTextHandler = (e) => {\r\n\t\t// console.log(e.target.value);\r\n\t\tsetInputText(e.target.value);\r\n\t};\r\n\tconst submitTodoHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetTodos([\r\n\t\t\t...todos,\r\n\t\t\t{ text: inputText, completed: false, id: Math.random() * 1000 },\r\n\t\t]);\r\n\t\tsetInputText(\"\");\r\n\t};\r\n\tconst statusHandler = (e) => {\r\n\t\tsetStatus(e.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<form>\r\n\t\t\t<input\r\n\t\t\t\tvalue={inputText}\r\n\t\t\t\tonChange={inputTextHandler}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"todo-input\"\r\n\t\t\t/>\r\n\t\t\t<button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n\t\t\t\t<i className=\"fas fa-plus-square\"></i>\r\n\t\t\t</button>\r\n\t\t\t<div className=\"select\">\r\n\t\t\t\t<select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n\t\t\t\t\t<option value=\"all\">All</option>\r\n\t\t\t\t\t<option value=\"completed\">Completed</option>\r\n\t\t\t\t\t<option value=\"uncompleted\">Uncompleted</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nTodo.propTypes = {};\r\n\r\nfunction Todo({ text, todo, todos, setTodos }) {\r\n\t//event\r\n\tconst deleteHandler = () => {\r\n\t\tsetTodos(todos.filter((el) => el.id !== todo.id));\r\n\t};\r\n\tconst completeHandler = () => {\r\n\t\tsetTodos(\r\n\t\t\ttodos.map((item) => {\r\n\t\t\t\tif (item.id === todo.id) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tcompleted: !item.completed,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"todo\">\r\n\t\t\t<li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n\t\t\t\t{text}\r\n\t\t\t</li>\r\n\t\t\t<button onClick={completeHandler} className=\"complete-btn\">\r\n\t\t\t\t<i className=\"fas fa-check\"></i>\r\n\t\t\t</button>\r\n\t\t\t<button onClick={deleteHandler} className=\"trash-btn\">\r\n\t\t\t\t<i className=\"fas fa-trash\"></i>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n\treturn (\r\n\t\t<div className=\"todo-container\">\r\n\t\t\t<ul className=\"todo-list\">\r\n\t\t\t\t{filteredTodos.map((todo) => (\r\n\t\t\t\t\t<Todo\r\n\t\t\t\t\t\tsetTodos={setTodos}\r\n\t\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\t\ttext={todo.text}\r\n\t\t\t\t\t\ttodo={todo}\r\n\t\t\t\t\t\ttodos={todos}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\t//states\n\tconst [inputText, setInputText] = useState(\"\");\n\tconst [todos, setTodos] = useState([]);\n\tconst [status, setStatus] = useState(\"all\");\n\tconst [filteredTodos, setFilteredTodos] = useState([]);\n\t//run once when app start\n\tuseEffect(() => {\n\t\tgetLocalTodos();\n\t}, []);\n\n\t//userEffect\n\tuseEffect(() => {\n\t\tconst filterHandler = () => {\n\t\t\tswitch (status) {\n\t\t\t\tcase \"completed\":\n\t\t\t\t\tsetFilteredTodos(todos.filter((todo) => todo.completed === true));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"uncompleted\":\n\t\t\t\t\tsetFilteredTodos(todos.filter((todo) => todo.completed === false));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tsetFilteredTodos(todos);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\t\tconst saveLocaTodos = () => {\n\t\t\tif (localStorage.getItem(\"todos\") === null) {\n\t\t\t\tlocalStorage.setItem(\"todos\", JSON.stringify([]));\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(\"todos\", JSON.stringify(todos));\n\t\t\t}\n\t\t};\n\n\t\t// console.log(\"hel\")\n\t\tfilterHandler();\n\t\tsaveLocaTodos();\n\t}, [todos, status]);\n\t// functions\n\tconst getLocalTodos = () => {\n\t\tif (localStorage.getItem(\"todos\") === null) {\n\t\t\tlocalStorage.setItem(\"todos\", JSON.stringify([]));\n\t\t} else {\n\t\t\tlet todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n\t\t\tsetTodos(todoLocal);\n\t\t}\n\t};\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<h1>Quyet's Todo List </h1>\n\t\t\t</header>\n\t\t\t<Form\n\t\t\t\tinputText={inputText}\n\t\t\t\ttodos={todos}\n\t\t\t\tsetTodos={setTodos}\n\t\t\t\tsetInputText={setInputText}\n\t\t\t\tsetStatus={setStatus}\n\t\t\t\tsetFilter={setFilteredTodos}\n\t\t\t/>\n\t\t\t<TodoList\n\t\t\t\tfilteredTodos={filteredTodos}\n\t\t\t\tsetTodos={setTodos}\n\t\t\t\ttodos={todos}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}